ssl_session_cache           builtin:1000  shared:SSL:2m;
ssl_session_timeout         5m;
ssl_protocols               TLSv1.3 TLSv1.2;
ssl_prefer_server_ciphers   on;
ssl_ecdh_curve              secp521r1:secp384r1; 

# If you want to use 0-RTT uncomment the following line. 
# However read https://tools.ietf.org/html/rfc8470 first.
#ssl_early_data             on;
    

# Cipher Support-block
# Support for most browsers and systems but including some CBC-weak ciphers
# openssl ciphers  'EECDH+AESGCM:EDH+AESGCM:!DH:!RSA:!AES128'
#ssl_ciphers                TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS_AES_256_GCM_SHA384:TLS-AES-256-GCM-SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS-CHACHA20-POLY1305-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA;

# Use this for non-CBC (no "weak" ciphers)
ssl_ciphers               TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS_AES_256_GCM_SHA384:TLS-AES-256-GCM-SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS-CHACHA20-POLY1305-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;

# openssl ciphers  'EECDH+AESGCM:EDH+AESGCM:!DHE:!AES128'
#ssl_ciphers               TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384

ssl_stapling                on;
ssl_stapling_verify         on;

add_header Strict-Transport-Security "max-age=31536000;";
# I am a big fan of ubiquitous encryption and HSTS ;) Go Preload! https://hstspreload.org/
#add_header                  Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
